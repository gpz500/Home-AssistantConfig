# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
#http:
#  base_url: !secret http_base_url
#  ssl_certificate: !secret http_ssl_certificate
#  ssl_key: !secret http_ssl_key

# Text to speech
tts:
  - platform: google_translate
    language: 'it'

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
homeassistant:
  customize: !include customize.yaml

# Netatmo
netatmo:
  client_id: !secret netatmo_api_key
  client_secret: !secret netatmo_secret_key

# Discovery integration
discovery:
  ignore:
    - kodi
    - openhome

# iOS integration
ios:

# Device tracker
device_tracker:
  - platform: fritz
    host: fritz.box
    new_device_defaults:
      track_new_devices: true

# Define some zone
zone:
  - name: Work
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    icon: mdi:worker

# MQTT
mqtt:
  broker: localhost
  client_id: home-assistant
  birth_message:
    topic: 'hass/status'
    payload: 'online'
    qos: 0
    retain: true
  will_message:
    topic: 'hass/status'
    payload: 'offline'
    qos: 0
    retain: true

# I miei switch
switch:
  - platform: mqtt
    name: "ModelOne Switch"
    state_topic: "shellies/shellyplug-s-040FF2/relay/0"
    command_topic: "shellies/shellyplug-s-040FF2/relay/0/command"
    availability_topic: "shellies/shellyplug-s-040FF2/online"
    payload_on: "on"
    payload_off: "off"
    state_on: "on"
    state_off: "off"
    payload_available: "true"
    payload_not_available: "false"
    optimistic: false
    qos: 0
    retain: false
  - platform: mqtt
    name: "Piantana"
    state_topic: "stat/piantana01/POWER"
    command_topic: "cmnd/piantana01/POWER"
    availability_topic: "tele/piantana01/LWT"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "ON"
    state_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    optimistic: false
    qos: 0
    retain: false
  - platform: mqtt
    name: "Lampada TV"
    state_topic: "stat/lampadatv/POWER"
    command_topic: "cmnd/lampadatv/POWER"
    availability_topic: "tele/lampadatv/LWT"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "ON"
    state_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    optimistic: false
    qos: 0
    retain: false
  - platform: mqtt
    name: "Presa piantana"
    state_topic: "stat/ferrodastiro/POWER"
    command_topic: "cmnd/ferrodastiro/POWER"
    availability_topic: "tele/ferrodastiro/LWT"
    payload_on: "ON"
    payload_off: "OFF"
    state_on: "ON"
    state_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    optimistic: false
    qos: 0
    retain: false
  - platform: "mqtt"
    name: "Ferro da stiro"
    state_topic: "zigbee2mqtt/tradfri_plug_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    payload_off: "OFF"
    payload_on: "ON"
    value_template: "{{ value_json.state }}"
    command_topic: "zigbee2mqtt/tradfri_plug_1/set"
  - platform: "mqtt"
    name: "Lampada scrivania"
    state_topic: "zigbee2mqtt/sonoff_basiczbr3_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    payload_off: "OFF"
    payload_on: "ON"
    value_template: "{{ value_json.state }}"
    command_topic: "zigbee2mqtt/sonoff_basiczbr3_1/set"

# I miei sensori
sensor:
  - platform: mqtt
    state_topic: "shellies/shellyplug-s-040FF2/relay/0/power"
    availability_topic: "shellies/shellyplug-s-040FF2/online"
    device_class: power
    name: "ModelOne Power"
    unit_of_measurement: "W"
    payload_available: "true"
    payload_not_available: "false"
  - platform: mqtt
    state_topic: "shellies/shellyplug-s-040FF2/temperature"
    availability_topic: "shellies/shellyplug-s-040FF2/online"
    device_class: temperature
    unit_of_measurement: "°C"
    name: "ModelOne Temperature"
    payload_available: "true"
    payload_not_available: "false"
  - platform: cert_expiry
    host: !secret cert_expiry_host
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
    name: "Tradfri Light 1"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_2"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
    name: "Tradfri Light 2"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_3"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
    name: "Tradfri Light 3"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_4"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
    name: "Tradfri Light 4"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_dimmer_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "brightness"
    icon: "mdi:brightness-5"
    value_template: "{{ value_json.brightness }}"
    name: "Tradfri Dimmer 1"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_dimmer_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
    name: "Tradfri Dimmer 1 Battery"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_dimmer_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    icon: "mdi:gesture-double-tap"
    value_template: "{{ value_json.action }}"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_dimmer_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
  - platform: mqtt
    name: Zigbee2mqtt Networkmap
    # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
    state_topic: zigbee2mqtt/bridge/networkmap/raw
    value_template: >-
      {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
    # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
    json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw
  - platform: "mqtt"
    name: "Ferro da stiro"
    state_topic: "zigbee2mqtt/tradfri_plug_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_button_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    icon: "mdi:toggle-switch"
    value_template: "{{ value_json.click }}"
    name: Tradfri Button 1
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_button_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
    name: "Tradfri Button 1 Battery"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_button_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_motion_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    device_class: "battery"
    value_template: "{{ value_json.battery }}"
    name: "Tradfri Motion 1 Battery"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_motion_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"
    name: "Tradfri Motion 1 Linkquality"
  - platform: fritzbox_netmonitor
    host: fritz.box
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/xiaomi_temp_hum_01"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    value_template: "{{ value_json.battery }}"
    device_class: "battery"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/xiaomi_temp_hum_01"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "°C"
    value_template: "{{ value_json.temperature }}"
    device_class: "temperature"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/xiaomi_temp_hum_01"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "%"
    value_template: "{{ value_json.humidity }}"
    device_class: "humidity"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/xiaomi_temp_hum_01"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "lqi"
    value_template: "{{ value_json.linkquality }}"
    icon: "mdi:signal"

binary_sensor:
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_motion_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    payload_on: true
    payload_off: false
    value_template: "{{ value_json.occupancy }}"
    device_class: "motion"
    name: "Tradfri Motion 1"
  - platform: template
    sensors:
      riscaldamento_on:
        friendly_name: "Riscaldamento On"
        value_template: >-
          {{ is_state('climate.netatmo_living_room', 'heat') }}
      riscaldamento_off:
        friendly_name: "Riscaldamento Off"
        value_template: >-
          {{ is_state('climate.netatmo_living_room', 'off') }}
      riscaldamento_auto:
        friendly_name: "Riscaldamento Auto"
        value_template: >-
          {{ is_state('climate.netatmo_living_room', 'auto') }}
      volumio_playing:
        friendly_name: "Volumio sta riproducendo"
        value_template: >-
          {{ is_state('media_player.volumio_2', 'playing') or is_state('media_player.volumio_mpd', 'playing') }}


# Controllo per il riscaldamento
input_select:
  riscaldamento:
    name: Riscaldamento
    options:
      - 'Off'
      - 'Auto'
      - 'On'

# Interfaccia MPD per Volumio
media_player:
  - platform: mpd
    host: volumio.fritz.box
    name: volumio_mpd
  - platform: kodi
    host: amazon-bc5e0ae5f.fritz.box
    name: Kodi on Fire TV Stick

# Le mie scene
scene:
  - name: Tutto spento
    entities:
      switch.ferro_da_stiro: off
      switch.lampada_tv: off
      switch.modelone_switch: off
      switch.piantana: off
      light.luci_corridoio: off
      switch.lampada_scrivania: off

# HomeKit
homekit:
  filter:
    include_entities:
      - switch.lampada_tv
      - switch.piantana
      - switch.ferro_da_stiro
      - switch.modelone_switch
      - switch.presa_piantana
      - light.tradfri_light_1
      - light.luci_corridoio
      - light.tradfri_light_4
      - switch.lampada_scrivania

# Qualche timer
timer:
  lucialbero:
    name: 'Luci albero di Natale'

# Impostazioni di registrazione sul DB
recorder:
  exclude:
    entities:
      - sensor.fritz_box_3490_bytes_received
      - sensor.fritz_box_3490_bytes_sent
      - sensor.fritz_box_3490_kb_sec_received
      - sensor.fritz_box_3490_kb_sec_sent
      - sensor.fritz_box_3490_packets_received
      - sensor.fritz_box_3490_packets_sent
      - sensor.fritz_box_3490_packets_sec_received
      - sensor.fritz_box_3490_packets_sec_sent

# Le mie luci
light:
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_1"
    availability_topic: "zigbee2mqtt/bridge/state"
    brightness: true
    color_temp: true
    schema: "json"
    command_topic: "zigbee2mqtt/tradfri_light_1/set"
    name: "Tradfri Light 1"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_2"
    availability_topic: "zigbee2mqtt/bridge/state"
    brightness: true
    color_temp: true
    schema: "json"
    command_topic: "zigbee2mqtt/tradfri_light_2/set"
    name: "Tradfri Light 2"
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_3"
    availability_topic: "zigbee2mqtt/bridge/state"
    brightness: true
    color_temp: true
    schema: "json"
    command_topic: "zigbee2mqtt/tradfri_light_3/set"
    name: "Tradfri Light 3"
  - platform: group
    name: Luci corridoio
    entities:
      - light.tradfri_light_2
      - light.tradfri_light_3
  - platform: "mqtt"
    state_topic: "zigbee2mqtt/tradfri_light_4"
    availability_topic: "zigbee2mqtt/bridge/state"
    brightness: true
    color_temp: true
    schema: "json"
    command_topic: "zigbee2mqtt/tradfri_light_4/set"
    name: "Tradfri Light 4"

# A script to get new TLS certificate
shell_command:
  get_certificate: /home/homeassistant/bin/get_certificate.sh

# Access to Nextcloud instance
nextcloud:
  url: !secret nextcloud_url
  username: !secret nextcloud_username
  password: !secret nextcloud_password
